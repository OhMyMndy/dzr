#!/bin/sh
which jq curl dialog openssl mpv>/dev/null || { echo "please install: jq curl dialog openssl mpv" 1>&2 && exit 1 ;}
[ $(printf "$DZR_CBC" | wc -m) -eq 16 ] || { echo -n "Missing/Bad DZR_CBC env variable:\necho 'export DZR_CBC=g*******0zvf9na1' > \$HOME/.profile\nand restart your shell\n" 1>&2 && exit 1 ;}
API="api.deezer.com"
DLG_LIST="dialog --keep-tite --output-fd 1 --menu $1: 0 0 0"
DLG_TEXT="dialog --keep-tite --output-fd 1 --inputbox $1: 0 0"
FMT_LIST='(if .data then .data else .tracks.data end)[]|("/"+.type+"/"+(.id|tostring), (.title+.name+" "+.artist.name|gsub("\\x22";"")))'
FMT_TRKS='"/track/"+([(if .data then .data else .tracks.data end)[]|select(.type=="track")|.id]|@csv)'
FMT_FUNC='s@[,?].*@@;s@[^a-zA-Z0-9]\{1,\}@_@g;s@[0-9,]\{1,\}@0@g;s@_\{1,\}$@@'

dzr()          { $DLG_LIST /search/track?q= 'by name' /search/artist?q= 'by name' /search/album?q= 'by name' /search/playlist?q= 'by name' /search/user?q= 'by name' /search/radio?q= 'by name' /genre 'list' /radio 'list' ;} 
dzr_genre_0()  { $DLG_LIST radios '' artists '' ;}
dzr_radio_0()  { $DLG_LIST tracks '' fans '' ;}
dzr_album_0()  { $DLG_LIST tracks '' fans '' ;}
dzr_user_0()   { $DLG_LIST charts '' albums '' playlists '' flow '' tracks '' artists '' ;}
dzr_artist_0() { $DLG_LIST top?limit=50 '' albums '' fans '' related '' radio '' playlists '' ;}
dzr_default()  { curl -s -H "Accept-Language: $LANG" "$API$1" | jq "$FMT_LIST" | xargs $DLG_LIST @ "play all /track/" ;} # TODO: .next
play() { # receive /track/1,2,3 from stdin
	xargs basename | xargs ./dzr-url | while read url id; do
		curl -s "$url" | $0-dec $id | eval ${PLAYER:-'mpv -'} ;
	done
}
for url in "$@"; do
	FUNC=$(echo "dzr_$url" | sed "$FMT_FUNC") # path (/search/artist?q=x) to function (dzr_search_artist)
	type $FUNC>/dev/null || FUNC=dzr_default
	case $url in # catch url that need user input (query, id)
		*=)  url="$url$($DLG_TEXT ''|jq -rR '.|@uri')" ;; # escaped query
		*/0) url="$url$($DLG_TEXT ''|jq -rR '.|@uri')" ;; # escaped id
		/track/*) echo $url | play; break ;;
	esac
	echo "$0 $url # call $FUNC" >&2
	while path=$($FUNC $url); do # browse REPL
		case "$path" in
		@) echo "$API$url"; curl -s "$API$url" | jq "$FMT_TRKS" | play ; break ;;
		/*) $0 "$path";;
		*)  $0 "$url/$path";;
		esac
	done
done
[ $# -eq 0 ] && $0 '' # give an argument to iterate over (if none given)
